---
apiVersion: v1
kind: Secret
metadata:
  name: redisdata
type: Opaque
data:
  password: $REDIS_PASSWORD
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-redis-config
data:
  redis-config: |
    maxmemory 1024mb
    maxmemory-policy allkeys-lru    
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - image: redis:7.0.5
          name: redis
          command:
            - redis-server
            - "--requirepass"
          args: ["$(REDIS_PASSWORD)"]
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MASTER
              value: "true"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redisdata
                  key: password
          ports:
            - containerPort: 6379
              name: redis-svc
          volumeMounts:
            - name: redis-storage
              mountPath: /data
            - name: config
              mountPath: /redis-master
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc-claim
        - name: config
          configMap:
            name: example-redis-config
            items:
              - key: redis-config
                path: redis.conf
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
   - port: 6379
     # nodePort: 30156
     targetPort: redis-svc
  selector:
   app: redis
